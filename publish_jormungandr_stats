#! /bin/sh

set -e

DEFAULT_CHANNEL_ID="@CardanoNodesHeartbeat"
# The channel to publish messages in
CHANNEL_ID="${TELEGRAM_CHANNEL_ID:-$DEFAULT_CHANNEL_ID}"
# Default value of command which output will be sent to the log
DEFAULT_REPORT_CMD="jcli rest v0 node stats get"
# Access token for Telegram Bot API
AUTH_TOKEN=$TELEGRAM_BOT_AUTH_TOKEN

function showHelp() {
    cat <<EOF
usage: $0 -p -i -a -c -r -h
  -p  Pool name/identifier. You can use the ticker of your pool here. This parameter is mandatory.
  -i  Interval in minutes that will be used for regular sending.
      If not specified then send info only once and exit.
  -a  Bot access token. If not specified then environment variable with name TELEGRAM_BOT_AUTH_TOKEN
      will be used for authentication.
  -c  Telegram channel to which send messages. E.g. \`$DEFAULT_CHANNEL_ID\`. If not specified then
      the environment variable \`TELEGRAM_BOT_AUTH_TOKEN\` will be used.
  -r  Command which output will be sent to the log. This is optional parameter.
      If unspecified then the next comand will be used: \`$DEFAULT_REPORT_CMD\`
  -h  Show this help.

This scrip sends stats information of the jormungandr node to the telegram channel via the Telegram Bot.
EOF
}

REPORT_CMD=$DEFAULT_REPORT_CMD

while getopts 'p:r:i:a:c:h' c
do
    case $c in
	p) POOL_ID="$OPTARG" ;;
	r) REPORT_CMD="$OPTARG" ;;
	i) INTERVAL="$OPTARG" ;;
	a) AUTH_TOKEN="$OPTARG" ;;
	c) CHANNEL_ID="$OPTARG" ;;
	h) showHelp; exit 0 ;;
    esac
done

if [ "$POOL_ID" == "" ]; then
    echo 'Parameter `-p` is mandatory'
    showHelp
    exit 1
fi
if [ "$AUTH_TOKEN" == "" ]; then
    echo 'You must specify `-a` option or set environment variable `TELEGRAM_BOT_AUTH_TOKEN`'
    showHelp
    exit 1
fi
if [ "$CHANNEL_ID" == "" ]; then
    echo 'You must specify `-c` option or set environment variable `TELEGRAM_CHANNEL_ID`'
    showHelp
    exit 1
fi


while :;
do
REPORT=$($REPORT_CMD)
echo -e "$POOL_ID\n$REPORT" | \
curl -X POST https://api.telegram.org/bot$AUTH_TOKEN/sendMessage --data chat_id="$CHANNEL_ID" --data-urlencode text@- || true
if [ -z $INTERVAL ]; then
    exit 0
fi
sleep "${INTERVAL}m"
done
